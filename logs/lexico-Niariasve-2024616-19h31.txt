LexToken(VOID,'void',2,1)
LexToken(VARIABLE,'main',2,6)
LexToken(LPAREN,'(',2,10)
LexToken(RPAREN,')',2,11)
LexToken(LBRACE,'{',2,13)
LexToken(VARIABLE,'int',3,18)
LexToken(VARIABLE,'a',3,22)
LexToken(ASSING,'=',3,24)
LexToken(INTEGER,10,3,26)
LexToken(SEMICOLON,';',3,28)
LexToken(VARIABLE,'double',4,33)
LexToken(VARIABLE,'b',4,40)
LexToken(ASSING,'=',4,42)
LexToken(VARIABLE,'a',4,44)
LexToken(SEMICOLON,';',4,45)
LexToken(COMMENT,'// Conversión implícita: int a double, permitido ',4,47)
LexToken(VARIABLE,'double',5,99)
LexToken(VARIABLE,'c',5,106)
LexToken(ASSING,'=',5,108)
LexToken(FLOAT,5.5,5,110)
LexToken(SEMICOLON,';',5,113)
LexToken(VARIABLE,'int',6,118)
LexToken(VARIABLE,'d',6,122)
LexToken(ASSING,'=',6,124)
LexToken(VARIABLE,'c',6,126)
LexToken(SEMICOLON,';',6,127)
LexToken(COMMENT,'// Error: Conversión implícita de double a int no permitida ',6,129)
LexToken(VARIABLE,'int',7,192)
LexToken(VARIABLE,'e',7,196)
LexToken(ASSING,'=',7,198)
LexToken(VARIABLE,'c',7,200)
LexToken(AS,'as',7,202)
LexToken(VARIABLE,'int',7,205)
LexToken(SEMICOLON,';',7,208)
LexToken(COMMENT,'// Error: Conversión explícita de double a int no válida en este contexto ',7,210)
LexToken(VARIABLE,'num',8,287)
LexToken(VARIABLE,'f',8,291)
LexToken(ASSING,'=',8,293)
LexToken(VARIABLE,'c',8,295)
LexToken(SEMICOLON,';',8,296)
LexToken(COMMENT,'// Correcto: double se puede asignar a num ',8,298)
LexToken(VARIABLE,'int',9,344)
LexToken(VARIABLE,'g',9,348)
LexToken(ASSING,'=',9,350)
LexToken(VARIABLE,'f',9,352)
LexToken(AS,'as',9,354)
LexToken(VARIABLE,'int',9,357)
LexToken(SEMICOLON,';',9,360)
LexToken(COMMENT,'// Error: Runtime error si f no es un int ',9,362)
LexToken(RBRACE,'}',10,405)
LexToken(VARIABLE,'int',14,412)
LexToken(VARIABLE,'doSomething1',14,416)
LexToken(LPAREN,'(',14,428)
LexToken(VARIABLE,'bool',14,429)
LexToken(VARIABLE,'flag',14,434)
LexToken(RPAREN,')',14,438)
LexToken(LBRACE,'{',14,440)
LexToken(IF,'if',15,445)
LexToken(LPAREN,'(',15,448)
LexToken(VARIABLE,'flag',15,449)
LexToken(RPAREN,')',15,453)
LexToken(LBRACE,'{',15,455)
LexToken(RETURN,'return',16,462)
LexToken(INTEGER,1,16,469)
LexToken(SEMICOLON,';',16,470)
LexToken(RBRACE,'}',17,475)
LexToken(ELSE,'else',17,477)
LexToken(LBRACE,'{',17,482)
LexToken(RETURN,'return',18,489)
LexToken(INTEGER,0,18,496)
LexToken(SEMICOLON,';',18,497)
LexToken(COMMENT,'// Correcto: ambas ramas retornan un valor ',18,499)
LexToken(RBRACE,'}',19,545)
LexToken(RBRACE,'}',20,548)
LexToken(VARIABLE,'String',22,552)
LexToken(VARIABLE,'doSomething2',22,559)
LexToken(LPAREN,'(',22,571)
LexToken(VARIABLE,'int',22,572)
LexToken(VARIABLE,'code',22,576)
LexToken(RPAREN,')',22,580)
LexToken(LBRACE,'{',22,582)
LexToken(SWITCH,'switch',23,587)
LexToken(LPAREN,'(',23,594)
LexToken(VARIABLE,'code',23,595)
LexToken(RPAREN,')',23,599)
LexToken(LBRACE,'{',23,601)
LexToken(CASE,'case',24,608)
LexToken(INTEGER,1,24,613)
LexToken(COLON,':',24,614)
LexToken(RETURN,'return',25,623)
LexToken(STRING,'"One"',25,630)
LexToken(SEMICOLON,';',25,635)
LexToken(CASE,'case',26,642)
LexToken(INTEGER,2,26,647)
LexToken(COLON,':',26,648)
LexToken(RETURN,'return',27,657)
LexToken(STRING,'"Two"',27,664)
LexToken(SEMICOLON,';',27,669)
LexToken(DEFAULT,'default',28,676)
LexToken(COLON,':',28,683)
LexToken(RETURN,'return',29,692)
LexToken(STRING,'"Unknown"',29,699)
LexToken(SEMICOLON,';',29,708)
LexToken(COMMENT,'// Correcto: todas las rutas retornan un valor ',29,710)
LexToken(RBRACE,'}',30,760)
LexToken(RBRACE,'}',31,763)
LexToken(VOID,'void',33,767)
LexToken(VARIABLE,'doSomething3',33,772)
LexToken(LPAREN,'(',33,784)
LexToken(VARIABLE,'int',33,785)
LexToken(VARIABLE,'num',33,789)
LexToken(RPAREN,')',33,792)
LexToken(LBRACE,'{',33,794)
LexToken(IF,'if',34,799)
LexToken(LPAREN,'(',34,802)
LexToken(VARIABLE,'num',34,803)
LexToken(MORE_THAN,'>',34,807)
LexToken(INTEGER,0,34,809)
LexToken(RPAREN,')',34,810)
LexToken(LBRACE,'{',34,812)
LexToken(VARIABLE,'print',35,819)
LexToken(LPAREN,'(',35,824)
LexToken(STRING,"'Positive'",35,825)
LexToken(RPAREN,')',35,835)
LexToken(SEMICOLON,';',35,836)
LexToken(RBRACE,'}',36,841)
LexToken(ELSE,'else',36,843)
LexToken(LBRACE,'{',36,848)
LexToken(LPAREN,'(',36,850)
LexToken(VARIABLE,'num',36,851)
LexToken(LESS_THAN,'<',36,855)
LexToken(INTEGER,0,36,857)
LexToken(RPAREN,')',36,858)
LexToken(LBRACE,'{',36,860)
LexToken(VARIABLE,'print',37,867)
LexToken(LPAREN,'(',37,872)
LexToken(STRING,"'Negative'",37,873)
LexToken(RPAREN,')',37,883)
LexToken(SEMICOLON,';',37,884)
LexToken(RBRACE,'}',38,889)
LexToken(ELSE,'else',38,891)
LexToken(IF,'if',38,896)
LexToken(LBRACE,'{',38,899)
LexToken(VARIABLE,'print',39,906)
LexToken(LPAREN,'(',39,911)
LexToken(STRING,"'Zero'",39,912)
LexToken(RPAREN,')',39,918)
LexToken(SEMICOLON,';',39,919)
LexToken(COMMENT,'//Incorrecto; no puede haber un else if despues de un else ',39,921)
LexToken(RBRACE,'}',40,983)
LexToken(RBRACE,'}',41,986)
